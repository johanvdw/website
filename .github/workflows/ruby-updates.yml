name: Build without container (dependency changes)

on:
  push:
    branches:
      - master
      - gha
  pull_request:
    branches:
      - master

jobs:
  build-nodocker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check if this is a pull request
        id: check-pr
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "is-pr=true" >> $GITHUB_ENV
          else
            echo "is-pr=false" >> $GITHUB_ENV
          fi
      - name: Check for Gemfile changes
        id: gemfile-check
        run: |
          if [[ "$is-pr" == "true" ]]; then
            # On PRs, fetch the base branch (master) and compare with the current PR branch
            git fetch origin master --depth=1
            git diff --name-only origin/master...HEAD | grep -qE 'Gemfile.lock|Gemfile' && echo "run-bundler=true" || echo "run-bundler=false"
          else
            # On pushes, compare the latest commit with the previous commit
            git diff --name-only HEAD^ HEAD | grep -qE 'Gemfile.lock|Gemfile' && echo "run-bundler=true" || echo "run-bundler=false"
          fi
        run: echo "run-bundler=$?" >> $GITHUB_ENV
      - name: install dependencies
        if: env.run-bundler == 'true'
        run: |
          sudo apt-get update && apt-get install -yq pngcrush imagemagick 

      - name: Set up Ruby
        if: env.run-bundler == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install dependencies
        if: env.run-bundler == 'true'
        run: |
          gem install bundler -v 1.17.3
          bundle install

      - name: Run Nanoc
        if: env.run-bundler == 'true'
        run: |
          bundle exec nanoc

      # Step 5: Upload the 'output' directory as an artifact
      - name: Upload output directory
        if: env.run-bundler == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: nanoc-output
          path: output

